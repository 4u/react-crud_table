{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo IP\\\\Desktop\\\\react-crud_table\\\\src\\\\components\\\\search\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    contacts\n  } = _ref;\n  const [query, setQuery] = useState(\"\");\n  const keys = [\"fullName\", \"address\", \"phoneNumber\", \"email\"];\n  const search = data => {\n    return data.filter(item => keys.some(key => item[key].toLowerCase().includes(query)));\n  };\n  search(contacts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      className: \"filter\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Search, \"HYX2QbDDdTtlu7GfoQbAPZOIM6k=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Search","contacts","query","setQuery","keys","search","data","filter","item","some","key","toLowerCase","includes","e","target","value"],"sources":["C:/Users/Lenovo IP/Desktop/react-crud_table/src/components/search/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Search = ({contacts}) => {\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const keys = [\"fullName\", \"address\", \"phoneNumber\", \"email\"];\r\n\r\n    const search = (data) => {\r\n        return data.filter((item) =>\r\n            keys.some((key) => item[key].toLowerCase().includes(query))\r\n        )\r\n    }\r\n\r\n    search(contacts)\r\n\r\n    return (\r\n        <>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Search...\" \r\n            className=\"filter\" \r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,MAAM,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMK,IAAI,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,CAAC;EAE5D,MAAMC,MAAM,GAAIC,IAAI,IAAK;IACrB,OAAOA,IAAI,CAACC,MAAM,CAAEC,IAAI,IACpBJ,IAAI,CAACK,IAAI,CAAEC,GAAG,IAAKF,IAAI,CAACE,GAAG,CAAC,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACV,KAAK,CAAC,CAAC,CAC9D;EACL,CAAC;EAEDG,MAAM,CAACJ,QAAQ,CAAC;EAEhB,oBACI;IAAA,uBACI;MACA,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,WAAW;MACvB,SAAS,EAAC,QAAQ;MAClB,KAAK,EAAEC,KAAM;MACb,QAAQ,EAAGW,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA;EACxC,iBACH;AAEX,CAAC;AAAC,GAxBIf,MAAM;AAAA,KAANA,MAAM;AA0BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}